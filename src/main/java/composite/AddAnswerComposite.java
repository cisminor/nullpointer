package composite;

import bean.AnswerBean;
import bean.AnswerBeanLocal;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.*;
import domain.Answer;
import domain.Question;
import edu.dragana.BeanLookup;
import util.Util;

public class AddAnswerComposite extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private NativeButton nativeButton_reply;
	@AutoGenerated
	private RichTextArea textArea_reply;

    private Question question;
    private QuestionComposite parentComposite;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public AddAnswerComposite(Question question, QuestionComposite composite) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
        this.question = question;
        parentComposite = composite;
        addButtonListeners();
	}

    private void addButtonListeners(){
        nativeButton_reply.addClickListener(new Button.ClickListener() {
            @Override
            public void buttonClick(Button.ClickEvent event) {
                String text = textArea_reply.getValue();
                if (validateInput(text)){
                    try {
                        Answer answer = new Answer();
                        answer.setText(text);
                        answer.setQuestion(question);
                        answer.setUser(Util.getCurrentUser());
                        answer.setAccepted(false);
                        AnswerBeanLocal answerBean = BeanLookup.get(AnswerBean.class);
                        answerBean.insertAnswer(answer);
                        parentComposite.updateQuestion();
                    } catch (Exception e) {
                        e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
                        Util.showError();
                    }
                }
            }
        });
    }

    private boolean validateInput(String input){
        if (input.equals("") || input.length() < 20)
            return false;
        return true;
    }

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("-1px");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("-1px");
		setHeight("-1px");
		
		// textArea_reply
		textArea_reply = new RichTextArea();
		textArea_reply.setImmediate(false);
		textArea_reply.setWidth("600px");
		textArea_reply.setHeight("200px");
		mainLayout.addComponent(textArea_reply);
		
		// nativeButton_reply
		nativeButton_reply = new NativeButton();
		nativeButton_reply.setCaption("Reply");
		nativeButton_reply.setImmediate(false);
		nativeButton_reply.setWidth("-1px");
		nativeButton_reply.setHeight("-1px");
        nativeButton_reply.setStyleName("reply-button");
		mainLayout.addComponent(nativeButton_reply);
		mainLayout.setComponentAlignment(nativeButton_reply, new Alignment(6));
		
		return mainLayout;
	}

}
